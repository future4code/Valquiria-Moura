{"version":3,"sources":["style/theme.js","reducers/taskReducer.js","reducers/index.js","actions/getTasks.js","containers/Planner/index.js","actions/createTask.js","containers/App/index.js","index.js"],"names":["createMuiTheme","palette","primary","orange","initialState","allTasks","rootReducer","combineReducers","taskReducer","state","arguments","length","undefined","action","type","Object","objectSpread2","payload","getTasks","dispatch","response","regenerator_default","a","async","_context","prev","next","awrap","axios","get","concat","sent","data","t0","window","alert","stop","MainContainer","styled","div","_templateObject","Inputs","_templateObject2","days","value","label","PostCardContainer","_templateObject3","LineCard","hr","_templateObject4","Planner","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFieldChange","event","setState","text","target","handleChange","name","defineProperty","handleClickSendTask","day","console","log","createNewTask","_this2","_this$state","react_default","createElement","rel","href","TextField_default","onChange","id","select","helperText","margin","map","option","MenuItem_default","key","Button_default","onClick","Card_default","CardContent_default","Typography_default","variant","component","React","Component","connect","newTaskInfo","post","createTask","middlewares","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","f","store","createStore","compose","apply","App","es","styles","theme","index_es","containers_Planner","rootElement","document","getElementById","ReactDOM","render","containers_App"],"mappings":"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","file":"static/js/main.e452d2a1.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\r\nimport orange from \"@material-ui/core/colors/orange\";\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    primary: orange\r\n  }\r\n});\r\n","const initialState = {\r\n    allTasks: [],\r\n}\r\n\r\nexport const taskReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"SET_TASKS\":\r\n            return {...state, allTasks: action.payload.allTasks}\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { taskReducer } from \"../reducers/taskReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  taskReducer,\r\n});\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = \"https://us-central1-missao-newton.cloudfunctions.net/generic/planner-bouman-valquiria\"\r\n\r\nexport const setTasks = (allTasks) => ({\r\n    type: 'SET_TASKS',\r\n    payload: {\r\n        allTasks,\r\n    }\r\n})\r\n\r\nexport const getTasks = () => async (dispatch) => {\r\n    \r\n    try {\r\n        const response = await axios.get(`${baseURL}`)\r\n        dispatch(setTasks(response.data))\r\n\r\n    } catch (error) {\r\n        window.alert(\"Ocorreu um erro.\")\r\n    }\r\n}\r\n\r\nexport default getTasks;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport 'typeface-roboto';\r\nimport { createTask } from \"../../actions/createTask\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst MainContainer = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  margin: 10px;\r\n  display: flex;\r\n  background-color: white;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Inputs = styled.div`\r\n  width: 700px;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 10px;\r\n`;\r\n\r\nconst days = [\r\n  {\r\n    value: 0,\r\n    label: 'Domingo',\r\n  },\r\n  {\r\n    value: 1,\r\n    label: 'Segunda',\r\n  },\r\n  {\r\n    value: 2,\r\n    label: 'Terça',\r\n  },\r\n  {\r\n    value: 3,\r\n    label: 'Quarta',\r\n  },\r\n  {\r\n    value: 4,\r\n    label: 'Quinta',\r\n  },\r\n  {\r\n    value: 5,\r\n    label: 'Sexta',\r\n  },\r\n  {\r\n    value: 6,\r\n    label: 'Sábado',\r\n  },\r\n];\r\n\r\nconst PostCardContainer = styled.div`\r\nmargin: 10px;\r\ndisplay: flex;\r\nheight: 200px;\r\n`;\r\n\r\nconst LineCard = styled.hr`\r\nwidth: 150px;\r\n`;\r\n\r\nclass Planner extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      text: \"\",\r\n      day: '',\r\n    }\r\n\r\n  }\r\n\r\n  handleFieldChange = event => {\r\n    this.setState({\r\n      \"text\": event.target.value\r\n    });\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({ \r\n      [name]: event.target.value });\r\n  };\r\n\r\n  handleClickSendTask = (text, day) => {\r\n    console.log(text, day)\r\n    this.props.createNewTask(text, day)\r\n    this.setState({\r\n        text: \"\",\r\n        day: \"\",\r\n    })\r\n}\r\n  \r\n\r\n  render() {\r\n    const { text, day } = this.state;\r\n    \r\n    return (\r\n      <MainContainer>\r\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\"></link>\r\n        <h1> Planner Semanal </h1>\r\n        \r\n        <Inputs>\r\n        \r\n          <TextField\r\n            onChange={this.handleFieldChange}\r\n            name=\"inserirTarefa\"\r\n            type=\"text\"\r\n            label=\"Insira aqui sua tarefa\"\r\n            value={text}\r\n            />\r\n          \r\n          <TextField\r\n            id=\"standard-select-day\"\r\n            select\r\n            label=\"Dia da semana\"\r\n            value={day}\r\n            onChange={this.handleChange('day')}\r\n            helperText=\"Quando a sua tarefa deve ser realizada.\"\r\n            margin=\"normal\"\r\n            >\r\n            {days.map(option => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n\r\n        <Button onClick={() => this.handleClickSendTask(text, day)}> Adicionar tarefa </Button>\r\n\r\n        </Inputs>\r\n        \r\n        <PostCardContainer>\r\n\r\n          <Card>\r\n            <CardContent>\r\n              \r\n              <Typography variant=\"h6\">\r\n                Segunda-feira\r\n              </Typography>\r\n              \r\n              <LineCard />\r\n              \r\n              <Typography component=\"p\">\r\n              </Typography>\r\n            \r\n            </CardContent>\r\n          </Card>\r\n        \r\n          <Card>\r\n            <CardContent>\r\n              \r\n              <Typography variant=\"h6\">\r\n                Terça-feira\r\n              </Typography>\r\n            \r\n              <LineCard />\r\n            \r\n              <Typography component=\"p\">\r\n              </Typography>\r\n            \r\n            </CardContent>\r\n          \r\n          </Card>\r\n          \r\n          <Card>\r\n            <CardContent>\r\n              \r\n              <Typography variant=\"h6\">\r\n                Quarta-feira\r\n              </Typography>\r\n            \r\n              <LineCard />\r\n            \r\n              <Typography component=\"p\">\r\n              </Typography>\r\n          \r\n            </CardContent>\r\n          </Card>\r\n        \r\n        <Card>\r\n          <CardContent>\r\n            \r\n            <Typography variant=\"h6\">\r\n              Quinta-feira\r\n            </Typography>\r\n            \r\n            <LineCard />\r\n            \r\n            <Typography component=\"p\">\r\n            </Typography>\r\n          \r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h6\">\r\n              Sexta-feira\r\n            </Typography>\r\n            \r\n            <LineCard />\r\n            \r\n            <Typography component=\"p\">\r\n            </Typography>\r\n\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent>\r\n            \r\n            <Typography variant=\"h6\">\r\n              Sábado\r\n            </Typography>\r\n            \r\n            <LineCard />\r\n            \r\n            <Typography component=\"p\">\r\n            </Typography>\r\n          \r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardContent>\r\n            \r\n            <Typography variant=\"h6\">\r\n              Domingo\r\n            </Typography>\r\n            \r\n            <LineCard />\r\n            \r\n            <Typography component=\"p\">\r\n              Testando tarefa\r\n            </Typography>\r\n          \r\n          </CardContent>\r\n        </Card>\r\n      \r\n      </PostCardContainer>  \r\n\r\n      </MainContainer>\r\n    ); \r\n    \r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  allTasks: state.taskReducer.allTasks\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  createNewTask: (text, day) => dispatch(createTask(text, day))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Planner);\r\n","import axios from \"axios\";\r\nimport  getTasks  from \"./getTasks\";\r\n\r\nconst baseURL = \"https://us-central1-missao-newton.cloudfunctions.net/generic/planner-bouman-valquiria\"\r\n\r\nexport const createTask = (text, day) => async (dispatch) => {\r\n    \r\n    const newTaskInfo = {\r\n        text: text,\r\n        day: day,\r\n    }\r\n    \r\n    try {\r\n        const response = await axios.post(`${baseURL}`, newTaskInfo)\r\n        console.log(response)\r\n        dispatch(getTasks(response.data.id))\r\n        window.alert(\"Tarefa incluída com sucesso!\")\r\n\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        window.alert(\"Não foi possível incluir sua tarefa!\")\r\n    }\r\n}","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\r\nimport theme from \"../../style/theme\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { rootReducer } from \"../../reducers\";\r\nimport Planner from \"../Planner\";\r\n\r\nconst middlewares = [\r\n  applyMiddleware(thunk),\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    : f => f\r\n];\r\n\r\nconst store = createStore(rootReducer, compose(...middlewares));\r\n\r\nexport const App = () => (\r\n  <Provider store={store}>\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Planner />\r\n    </MuiThemeProvider>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./containers/App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}